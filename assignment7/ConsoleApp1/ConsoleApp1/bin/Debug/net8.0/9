<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="never" />
    <meta name="description" content="版本控制是软件开发的核心，促进团队协作与项目管理。通过制定明确的分支命名策略，遵循一致的代码提交规范，如指明提交类型和简短描述，增强了历史记录的可读性，可以清晰地组织和理解项目的结构与进展。" />
    <meta property="og:description" content="版本控制是软件开发的核心，促进团队协作与项目管理。通过制定明确的分支命名策略，遵循一致的代码提交规范，如指明提交类型和简短描述，增强了历史记录的可读性，可以清晰地组织和理解项目的结构与进展。" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>Git 版本控制：构建高效协作和开发流程的最佳实践 - 后除 - 博客园</title>
    <link rel="canonical" href="https://www.cnblogs.com/mazey/p/18156657" />
    <link rel="shortcut icon" id="favicon" href="//assets.cnblogs.com/favicon.svg?v=2" type="image/svg+xml" />
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=22aBlxLxM3CErNzn75a0-VjXxP1bUWs59o5gqlkic6c" />
    

    <link id="MainCss" rel="stylesheet" href="/skins/codinglife/bundle-codinglife.min.css?v=BpDsZaqt3Vo17LmofajxibGWthTFRyeegD3DeE1U2E0" />
        <link id="highlighter-theme-cnblogs" type="text/css" rel="stylesheet" href="/css/hljs/cnblogs.css?v=5J1NDtbnnIr2Rc2SdhEMlMxD4l9Eydj88B31E7_NhS4" />
    
    
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/codinglife/bundle-codinglife-mobile.min.css?v=nKYRRiCAgdHHKoqtFkqXweTDit8MaL8XLJDkQUS4rf4" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/mazey/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/mazey/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/mazey/wlwmanifest.xml" />
    <script>
        var currentBlogId = 320258;
        var currentBlogApp = 'mazey';
        var isLogined = false;
        var isBlogOwner = false;
        var skinName = 'CodingLife';
        var visitorUserId = '';
        var hasCustomScript = false;
        window.cb_enable_mathjax = false;
        window.mathEngine = 0;
        window.codeHighlightEngine = 1;
        window.enableCodeLineNumber = false;
        window.codeHighlightTheme = 'cnblogs';
        window.darkModeCodeHighlightTheme = 'vs2015';
        window.isDarkCodeHighlightTheme = false;
        window.isDarkModeCodeHighlightThemeDark = true;
        window.isDisableCodeHighlighter = false;
        window.enableCodeThemeTypeFollowSystem = false;
        window.enableMacStyleCodeBlock = false;
    </script>
        <script>
            window.currentPostId = 18156657;
            window.currentPostDateAdded = '2024-04-25 00:06';
        </script>
    <script src="https://assets.cnblogs.com/scripts/jquery-3.3.1.min.js"></script>
    <script src="https://cdn-www.cnblogs.com/js/blog-common.min.js?v=_rgYy_Ast9OXsi6wUe-bs6yfIeNUXXp3RoYNNDYFsc0"></script>
    
</head>
<body class="skin-codinglife has-navbar">
    <a name="top"></a>
        <div id="bannerbar" class="bannerbar-mobile bannerbar-text-mobile formobile">
                <a href="https://www.cnblogs.com/cmt/p/18094172" onclick="countCreativeClicks('M2-博客园-鼠标垫')" rel="nofollow">
                    <img src="https://img2024.cnblogs.com/blog/35695/202401/35695-20240115080910898-1157541931.jpg" alt="" onload="countCreativeImpressionsOnMobile('M2-博客园-鼠标垫')" />
                    <span id="m2_impression" style="display:none"></span>
                </a>
        </div>
    <div id="top_nav" class="navbar forpc">
        <nav id="nav_main" class="navbar-main">
            <ul id="nav_left" class="navbar-list navbar-left">
                <li class="navbar-branding">
                    <a href="https://www.cnblogs.com/" title="开发者的网上家园" role="banner">
                        <img src="//assets.cnblogs.com/logo.svg" alt="博客园Logo" />
                    </a>
                </li>
                <li><a href="https://cnblogs.vip/">会员</a></li>
                <li><a href="https://cnblogs.vip/store">周边</a></li>
                <li>
                    <a href="https://news.cnblogs.com/" onclick="countClicks('nav', 'skin-navbar-news')">新闻</a>
                </li>
                <li>
                    <a href="https://q.cnblogs.com/" onclick="countClicks('nav', 'skin-navbar-q')">博问</a>
                </li>
                <li>
                    <a href="https://ai.hanghang.com/page/4649915" target="_blank">AI培训</a>
                </li>
                <li><a href="https://market.cnblogs.com" target="_blank">云市场</a></li>
            </ul>
            <ul id="nav_right" class="navbar-list navbar-right">
                <li>
                    <form id="zzk_search" class="navbar-search dropdown" action="https://zzk.cnblogs.com/s" method="get" role="search">
                        <input name="w" id="zzk_search_input" placeholder="代码改变世界" type="search" tabindex="3" autocomplete="off" />
                        <button id="zzk_search_button" onclick="window.navbarSearchManager.triggerActiveOption()">
                            <img id="search_icon" class="focus-hidden" src="//assets.cnblogs.com/icons/search.svg" alt="搜索" />
                            <img class="hidden focus-visible" src="//assets.cnblogs.com/icons/enter.svg" alt="搜索" />
                        </button>
                        <ul id="navbar_search_options" class="dropdown-menu quick-search-menu">
                            <li tabindex="0" class="active" onclick="zzkSearch(event, document.getElementById('zzk_search_input').value)">
                                <div class="keyword-wrapper">
                                    <img src="//assets.cnblogs.com/icons/search.svg" alt="搜索" />
                                    <div class="keyword"></div>
                                </div>
                                <span class="search-area">所有博客</span>
                            </li>
                                    <li tabindex="1" onclick="zzkBlogSearch(event, 'mazey', document.getElementById('zzk_search_input').value)">
                                        <div class="keyword-wrapper">
                                            <img src="//assets.cnblogs.com/icons/search.svg" alt="搜索" />
                                            <div class="keyword"></div>
                                        </div>
                                        <span class="search-area">当前博客</span>
                                    </li>
                        </ul>
                    </form>
                </li>
                <li id="navbar_login_status" class="navbar-list">
                    <a class="navbar-user-info navbar-blog" href="https://i.cnblogs.com/EditPosts.aspx?opt=1" alt="写随笔" title="写随笔">
                        <img id="new_post_icon" class="navbar-icon" src="//assets.cnblogs.com/icons/newpost.svg" alt="写随笔" />
                    </a>
                    <a id="navblog-myblog-icon" class="navbar-user-info navbar-blog" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx" alt="我的博客" title="我的博客">
                        <img id="myblog_icon" class="navbar-icon" src="//assets.cnblogs.com/icons/myblog.svg" alt="我的博客" />
                    </a>
                    <a class="navbar-user-info navbar-message navbar-icon-wrapper" href="https://msg.cnblogs.com/" alt="短消息" title="短消息">
                        <img id="msg_icon" class="navbar-icon" src="//assets.cnblogs.com/icons/message.svg" alt="短消息" />
                        <span id="msg_count" style="display: none"></span>
                    </a>
                    <a id="navbar_lite_mode_indicator" data-current-page="blog" style="display: none" href="javascript:void(0)" alt="简洁模式" title="简洁模式启用，您在访问他人博客时会使用简洁款皮肤展示">
                        <img class="navbar-icon" src="//assets.cnblogs.com/icons/lite-mode-on.svg" alt="简洁模式" />
                    </a>
                    <div id="user_info" class="navbar-user-info dropdown">
                        <a class="dropdown-button" href="https://home.cnblogs.com/">
                            <img id="user_icon" class="navbar-avatar" src="//assets.cnblogs.com/icons/avatar-default.svg" alt="用户头像" />
                        </a>
                        <div class="dropdown-menu">
                            <a id="navblog-myblog-text" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx">我的博客</a>
                            <a href="https://home.cnblogs.com/">我的园子</a>
                            <a href="https://account.cnblogs.com/settings/account">账号设置</a>
                            <a href="javascript:void(0)" id="navbar_lite_mode_toggle" title="简洁模式会使用简洁款皮肤显示所有博客">
    简洁模式 <img id="navbar_lite_mode_on" src="/images/lite-mode-check.svg" class="hide" /><span id="navbar_lite_mode_spinner" class="hide">...</span>
</a>
                            <a href="javascript:void(0)" onclick="account.logout();">退出登录</a>
                        </div>
                    </div>
                    <a class="navbar-anonymous" href="https://account.cnblogs.com/signup">注册</a>
                    <a class="navbar-anonymous" href="javascript:void(0);" onclick="account.login()">登录</a>
                </li>
            </ul>
        </nav>
    </div>

    

    <!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
        <a id="lnkBlogLogo" href="https://www.cnblogs.com/mazey/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a>		
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/mazey">后除</a>
</h1>
<h2>后除的博客</h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
</li>
<li>
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/mazey/">
首页</a>
</li>
<li>

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
<li>
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/%E5%90%8E%E9%99%A4">
联系</a></li>
<li>
<a id="blog_nav_rss" class="menu" href="javascript:void(0)" data-rss="https://www.cnblogs.com/mazey/rss/">
订阅</a>
<!--<partial name="./Shared/_XmlLink.cshtml" model="Model" /></li>--></li>
<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
</ul>


		<div class="blogStats">
			<div id="blog_stats_place_holder"><script>loadBlogStats();</script></div>
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->
<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		<div id="post_detail">
    <!--done-->
    <div id="topics">
        <div class="post">
            <h1 class = "postTitle">
                <a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/mazey/p/18156657" title="发布于 2024-04-25 00:06">
    <span role="heading" aria-level="2">Git 版本控制：构建高效协作和开发流程的最佳实践</span>
    

</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        <img src="https://img2024.cnblogs.com/blog/981491/202404/981491-20240425000535690-794690357.png" alt="Git 版本控制：构建高效协作和开发流程的最佳实践" class="desc_img" />
        版本控制是软件开发的核心，促进团队协作与项目管理。通过制定明确的分支命名策略，遵循一致的代码提交规范，如指明提交类型和简短描述，增强了历史记录的可读性，可以清晰地组织和理解项目的结构与进展。
    </div>
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h2 id="引言">引言</h2>
<p>版本控制是开发中不可或缺的一部分，他允许多人同时协作，通过记录每一次代码的变更，帮助开发者理解何时、为什么以及谁做了修改。这不仅有助于错误追踪和功能回溯，还使得团队能够并行工作，通过分支管理实现功能的增加和问题的修复。此外，也允许开发者在出现问题时回滚到之前的状态，确保项目的稳定发展。</p>
<h2 id="1-分支命名策略">1. 分支命名策略</h2>
<h3 id="主要分支命名">主要分支命名</h3>
<ul>
<li><code>main</code> 或 <code>master</code>：项目的主分支，存放正式发布的版本。</li>
<li><code>develop</code>：开发分支，用于日常开发阶段验证新功能，此分支不会推送至生产环境；且由于脏代码的堆积，偶尔需要重建下。</li>
</ul>
<h3 id="功能性分支命名">功能性分支命名</h3>
<p>以一种结构化的方法命名，如<code>&lt;类型&gt;/&lt;版本&gt;/&lt;描述&gt;</code>，例如：<code>fix/v1.0.0/authentication</code>。这里的版本可根据实际情况决定，可以是 <code>v1.0.0</code>，也可以是 <code>v1.0</code>、<code>v1</code>、<code>1.0.0</code> 等。</p>
<ul>
<li><code>feature/&lt;版本&gt;/&lt;功能&gt;</code>：用于开发新功能的分支，例如：<code>feature/v1.0.0/authentication</code>。</li>
<li><code>fix/&lt;版本&gt;/&lt;问题描述&gt;</code>：修复特定版本中的错误，例如：<code>fix/v1.0.0/login</code>。</li>
</ul>
<p>其他类型名：<code>docs</code>、<code>refactor</code>、<code>test</code> 等。</p>
<p>这样命名的好处是，面对 SourceTree 这样的图形化客户端时，可以清晰的看清项目的版本迭代记录。</p>
<p><img src="https://blog.mazey.net/wp-content/uploads/2024/04/git-20230724-171936-v3-tiny.jpg?width=800px" alt="SourceTree" loading="lazy"></p>
<p><em>注：由于不同的规范和风格，这里的分隔符也常使用下划线，例如：<code>feature_v1.0.0_authentication</code>。</em></p>
<h3 id="特定目的或临时性分支命名">特定目的或临时性分支命名</h3>
<ul>
<li><code>release/&lt;版本&gt;</code>：用于准备发布的版本，允许进行最后的调整，例如：<code>release/v1.0.0</code>。</li>
<li><code>hotfix/&lt;版本&gt;/&lt;问题描述&gt;</code>：用于紧急修复生产环境中的问题，例如：<code>hotfix/v1.0.0/payment</code>。</li>
</ul>
<h3 id="个人或团队工作分支命名">个人或团队工作分支命名</h3>
<ul>
<li><code>&lt;用户&gt;/&lt;类型&gt;/&lt;版本&gt;/&lt;描述&gt;</code>：个人工作分支，明确指出负责人和工作内容，例如：<code>john/fix/v1.0.0/login-issue</code>。</li>
<li><code>team/&lt;团队&gt;/&lt;类型&gt;/&lt;版本&gt;/&lt;描述&gt;</code>：团队工作分支，有助于区分不同团队的工作，例如：<code>team/account/feature/v1.0.0/add-nickname</code>。</li>
</ul>
<h3 id="分支命名策略的重要性">分支命名策略的重要性</h3>
<ol>
<li><strong>清晰性</strong>：良好的命名策略可以快速告诉其他人这个分支的目的和内容。</li>
<li><strong>组织性</strong>：有助于在大型项目中管理和维护众多的分支。</li>
<li><strong>自动化</strong>：一些自动化工具和 CI/CD 流程可以根据分支命名模式自动执行特定任务。</li>
</ol>
<p><img src="https://blog.mazey.net/wp-content/uploads/2024/04/workflows-11-51-tiny.jpg?width=800px" alt="Workflows" loading="lazy"></p>
<p>案例项目：<a href="https://github.com/mazeyqian/mazey/actions" target="_blank" rel="noopener">https://github.com/mazeyqian/mazey/actions</a></p>
<h2 id="2-代码提交规范">2. 代码提交规范</h2>
<p>一个良好的提交信息能够让其他人快速理解这次提交的目的，以及它对项目产生的影响。以下是一个推荐的代码提交规范格式：</p>
<pre><code class="language-plain">&lt;type&gt;(&lt;scope&gt;): &lt;subject&gt;
</code></pre>
<ul>
<li><code>&lt;type&gt;</code>：提交类型，用于说明 Commit 的类别，比如是修复 Bug（<code>fix</code>）、添加新功能（<code>feature</code>）还是文档变更（<code>docs</code>）等；</li>
<li><code>&lt;scope&gt;</code>：影响范围，可选项，用于指明本次提交影响的范围或模块，例如：<code>login</code>、<code>userModel</code>、<code>docs</code> 等；</li>
<li><code>&lt;subject&gt;</code>：简短描述，具体说明本次提交的主要内容，应简洁明了。</li>
</ul>
<h3 id="类型type">类型（type）</h3>
<p>常见的提交类型包括：</p>
<ul>
<li><code>feat</code>：新增功能（<code>feature</code>）；</li>
<li><code>fix</code>：修补 Bug；</li>
<li><code>docs</code>：文档变更；</li>
<li><code>style</code>： 格式（不影响代码运行的变动）；</li>
<li><code>refactor</code>：重构（即不是新增功能，也不是修改 Bug 的代码变动）；</li>
<li><code>test</code>：增加测试；</li>
<li><code>chore</code>：构建过程或辅助工具的变动。</li>
</ul>
<h3 id="主题subject">主题（subject）</h3>
<p>主题是对 Commit 目的的简短描述，不超过 50 个字符，建议使用现在时态和小写字母，并且不以句号结尾，例如：</p>
<ul>
<li><code>feat(login): add captcha to login form</code></li>
<li><code>fix(userModel): correct age calculation logic</code></li>
<li><code>docs(readme): update installation instructions</code></li>
</ul>
<p><img src="https://blog.mazey.net/wp-content/uploads/2024/04/commits-13-20-w600-tiny.jpg" alt="Git Commits" loading="lazy"></p>
<p>案例项目：<a href="https://github.com/mazeyqian/mazey" target="_blank" rel="noopener">https://github.com/mazeyqian/mazey</a></p>
<h2 id="3-merge-requestmr的实践">3. Merge Request（MR）的实践</h2>
<p>Merge Request（MR）或 Pull Request（PR）是代码审查和合并的重要环节。它不仅涉及代码的合并，还可以帮助团队成员之间进行沟通、提供反馈和确保代码质量。</p>
<h3 id="清晰明确的标题">清晰明确的标题</h3>
<ul>
<li><strong>明确模块或功能</strong>：如果可能，指明 MR 影响的具体模块或功能，使得标题更加具体，例如：<code>feat(user): 添加用户登录功能</code> 或 <code>fix(database): 解决并发访问时的数据不一致问题</code>。</li>
<li><strong>关联 Issue</strong>：如果 MR 与特定的 Issue 相关，可以在标题中直接提及该 Issue，例如使用 <code>Close #1</code> 表示此次 MR 旨在解决编号为 1 的 Issue。这不仅能够提供更多上下文信息，还可以在某些平台上自动关闭相关的 Issue。</li>
<li><strong>使用标签</strong>：在标题中使用标签（例如：<code>feat</code>、<code>fix</code>、<code>docs</code> 等）来标明 MR 的类型，这有助于快速了解 MR 的性质。</li>
</ul>
<p><img src="https://blog.mazey.net/wp-content/uploads/2024/04/git-mr-pr-2024-04-05_16-19-w613.png" alt="Merge Request and Pull Request" loading="lazy"></p>
<p>案例项目：<a href="https://github.com/tzfqh/gmdtable" target="_blank" rel="noopener">https://github.com/tzfqh/gmdtable</a></p>
<h3 id="详细的描述">详细的描述</h3>
<p>对 MR 进行详细说明的部分，应该包含所有必要的信息，以便理解这次提交的背景、目的和具体实现。</p>
<ul>
<li><strong>背景和目的</strong>：首先简要说明为什么需要这次改动，他解决了什么问题或带来了哪些新功能。</li>
<li><strong>完成的任务清单</strong>：提供一个清单，列出了此次 MR 完成了哪些具体任务。这有助于跟踪 MR 的进度和范围。</li>
<li><strong>变更说明</strong>：详细描述代码变更的内容，包括新增、修改或删除了哪些功能或模块。</li>
<li><strong>测试和验证</strong>：说明已经进行了哪些测试或验证步骤来确保代码的质量和功能的正确性。</li>
<li><strong>额外信息</strong>：如有必要，可以添加如何配置新功能、影响的用户或系统部分、未来规划等额外信息。</li>
</ul>
<p>例如：</p>
<pre><code class="language-plain">Title: feat(login): 添加验证码功能 (Close #1)

Description:

实现了在用户登录流程中添加验证码功能，旨在增强系统安全性。

已完成的任务：

- 设计并实现验证码生成逻辑
- 在登录表单中集成验证码输入字段
- 实现验证码验证逻辑
- 更新相关文档和测试用例

此次改动通过了所有单元测试，并在本地环境中进行了手动测试验证，确保新加入的验证码功能正常工作。

关联 Issue：#1
</code></pre>
<h2 id="4-打标签">4. 打标签</h2>
<p>打标签（Tagging）是一种标记特定版本的方法，他允许在项目的历史中快速定位到某个点。</p>
<h3 id="打轻量标签">打轻量标签</h3>
<p>轻量标签（Lightweight Tag）是指向某个提交对象的引用，他就像一个不会改变的分支。创建轻量标签不会存储额外的信息（如标签创建者、邮箱、创建日期等）。如果只是为了快速记住某个提交点，可以使用轻量标签。</p>
<pre><code class="language-bash">git tag &lt;tagname&gt; &lt;commit-hash&gt;
</code></pre>
<ul>
<li><code>&lt;tagname&gt;</code>：想要创建的标签名称；</li>
<li><code>&lt;commit-hash&gt;</code>：（可选）想要标记的提交的哈希值。如果省略，Git 会在当前提交上创建标签。</li>
</ul>
<p>示例：</p>
<pre><code class="language-bash">git tag v1.0.0 abc1234
</code></pre>
<h3 id="打注释标签">打注释标签</h3>
<p>注释标签（Annotated Tag）会存储额外的信息，比如创建者的名字、电子邮件地址、日期和标签信息。</p>
<pre><code class="language-bash">git tag -a &lt;tagname&gt; -m "&lt;tagmessage&gt;" &lt;commit-hash&gt;
</code></pre>
<ul>
<li><code>-a</code>：表示创建一个注释标签；</li>
<li><code>&lt;tagname&gt;</code>：想要创建的标签名称；</li>
<li><code>-m</code>：后面跟随的是这个标签的信息；</li>
<li><code>&lt;tagmessage&gt;</code>：标签信息，简短描述这个标签；</li>
<li><code>&lt;commit-hash&gt;</code>：（可选）你想要标记的提交的哈希值。</li>
</ul>
<p>示例：</p>
<pre><code class="language-bash">git tag -a v1.0.1 -m "Release version 1.0.1 with minor bug fixes" abc1234
</code></pre>
<h3 id="推送标签到远程仓库">推送标签到远程仓库</h3>
<p>默认情况下，<code>git push</code> 命令不会将标签推送到远程仓库，需要显式地推送标签。</p>
<p><strong>推送特定标签：</strong></p>
<pre><code class="language-bash">git push origin &lt;tagname&gt;
</code></pre>
<p>示例：</p>
<pre><code class="language-bash">git push origin v1.0.0
</code></pre>
<p><strong>推送所有本地标签：</strong></p>
<pre><code class="language-bash">git push origin --tags
</code></pre>
<h2 id="5-遇到问题使用-git-revert-回滚">5. 遇到问题使用 <code>git revert</code> 回滚</h2>
<p><img src="https://blog.mazey.net/wp-content/uploads/2024/04/git-revert-2024-04-05_19-29-w952-tiny.png?width=800px" alt="Git Revert" loading="lazy"></p>
<p><code>git revert</code> 是用于撤销之前提交的变更的命令，<code>git revert</code> 的操作是通过创建一个新的提交来实现的，这个新提交是对旧提交的直接反转，即他会引入与旧提交相反的变更。这样做的好处是它不会改变项目历史。</p>
<h3 id="命令语法">命令语法</h3>
<pre><code class="language-sh">git revert &lt;commit-hash&gt;
</code></pre>
<p>这里 <code>&lt;commit-hash&gt;</code> 是你想要撤销的提交的哈希值。</p>
<h3 id="操作流程">操作流程</h3>
<ul>
<li>找到你想要撤销的提交的哈希值，可以通过 <code>git log</code> 查看提交历史；</li>
<li>执行 <code>git revert</code> 命令并指定相应的哈希值；</li>
<li>Git 会创建一个新的提交，这个提交会撤销指定提交所做的所有变更；</li>
<li>如果有冲突，解决完冲突才能完成 <code>revert</code> 操作。</li>
</ul>
<h3 id="使用场景">使用场景</h3>
<p><code>git revert</code> 是在不打乱项目历史的情况下撤销变更的安全方式。例如，如果一个已经发布到生产环境中的提交引入了一个严重错误，使用 <code>git revert</code> 可以快速地撤销这个提交带来的影响，同时保留了完整的项目历史。</p>
<h3 id="与-git-reset-的区别">与 <code>git reset</code> 的区别</h3>
<p><code>git reset</code> 也可以用来撤销变更，但他通过移动分支指针到旧的提交来实现，这会改变项目历史。</p>
<h2 id="总结">总结</h2>
<p>版本控制是软件开发的核心，促进团队协作与项目管理。通过制定明确的分支命名策略（例如：<code>main</code>、<code>develop</code>、<code>feature/&lt;版本&gt;/&lt;功能&gt;</code> 等），遵循一致的代码提交规范，如指明提交类型和简短描述，增强了历史记录的可读性，可以清晰地组织和理解项目的结构与进展。</p>
<p><strong>版权声明</strong></p>
<p>本博客所有的原创文章，作者皆保留版权。转载必须包含本声明，保持本文完整，并以超链接形式注明作者<a href="https://github.com/mazeyqian" target="_blank" rel="noopener">后除</a>和本文原始地址：<a href="https://blog.mazey.net/4581.html" target="_blank" rel="noopener">https://blog.mazey.net/4581.html</a></p>
<p>（完）</p>

</div>
<div id="MySignature" role="contentinfo">
    <font style="color: #333333">GitHub: https://github.com/mazeyqian</font>
<br>
<font style="color: #CD2E96">Blog: https://blog.mazey.net/</font>
</div>
<div class="clear"></div>
<div id="blog_post_info_block" role="contentinfo">
    <div id="blog_post_info"></div>
    <div class="clear"></div>
    <div id="post_next_prev"></div>
</div>
            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="2.5605095652662038" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2024-04-25 00:06">2024-04-25 00:06</span>&nbsp;
<a href="https://www.cnblogs.com/mazey">后除</a>&nbsp;
阅读(<span id="post_view_count">298</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=18156657" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(18156657);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '18156657', targetLink: 'https://www.cnblogs.com/mazey/p/18156657', title: 'Git 版本控制：构建高效协作和开发流程的最佳实践' })">举报</a>
</div>
        </div>
	    
	    
    </div><!--end: topics 文章、评论容器-->
</div>
<script>
    var cb_entryId = 18156657, cb_entryCreatedDate = '2024-04-25 00:06', cb_postType = 1, cb_postTitle = 'Git 版本控制：构建高效协作和开发流程的最佳实践';
    var allowComments = true, cb_blogId = 320258, cb_blogApp = 'mazey', cb_blogUserGuid = '92228cb8-4138-e611-9fc1-ac853d9f53cc';
    mermaidRender.render()
    markdown_highlight()
    zoomManager.apply("#cnblogs_post_body img:not(.code_img_closed):not(.code_img_opened)");    
</script>
<a id="!comments"></a>
<div id="blog-comments-placeholder"></div>
<div id="comment_form" class="commentform">
    <a name="commentform"></a>
    <div id="divCommentShow"></div>
    <div id="comment_nav">
            <a class="comment-nav-left forpc" href="https://cnblogs.vip/" target="_blank">会员力量，点亮园子希望</a>
        <div class="comment-nav-right">
            <span id="span_refresh_tips"></span><a href="#" onclick="return RefreshPage();">刷新页面</a><a href="#top">返回顶部</a>
        </div>
    </div>
    <div id="comment_form_container"></div>
    <div class="ad_text_commentbox" id="ad_text_under_commentbox"></div>
        <div id="cnblogs_ch"></div>
    <div id="opt_under_post"></div>
        <div id="cnblogs_c1" class="under-post-card">
            <a href="https://cnblogs.vip/buy" rel="nofollow" target="_blank" onclick="countCreativeClicks('C1-博客园-会员')">
                <img src="https://img2024.cnblogs.com/blog/35695/202403/35695-20240328092537879-1189167464.jpg" onload="countCreativeImpressions('C1-博客园-会员')" alt="" />
                <span id="c1_impression" style="display:none"></span>
            </a>
        </div>
    <div id="under_post_card1"></div>
        <div id="cnblogs_c2" class="under-post-card">
            <a href="https://market.cnblogs.com/" rel="nofollow" target="_blank" onclick="countCreativeClicks('C2-阿里云-云市场')">
                <img src="https://img2024.cnblogs.com/blog/35695/202403/35695-20240309100232478-706935978.jpg" alt="" onload="countCreativeImpressions('C2-阿里云-云市场')" />
            </a>
        </div>
    <div id="under_post_card2"></div>
    <div id="HistoryToday" class="under-post-card"></div>
    <script type="text/javascript">
        var commentManager = new blogCommentManager();
        commentManager.renderComments(0);
        fixPostBody();
        window.footnoteTipManager.generateFootnoteTips();

            window.tocManager.displayDisableTocTips = false;
            window.tocManager.generateToc();
            
                setTimeout(function() { countViews(cb_blogId, cb_entryId); }, 50);
            
            deliverT2();
            deliverC1C2();
            loadNewsAndKb();
            
                LoadPostCategoriesTags(cb_blogId, cb_entryId);
            
            LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
            GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate, cb_postType);
            loadOptUnderPost();
            GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
                </script>
</div>

	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->
	<div id="sideBar">
		<div id="sideBarMain">
			<div id="sidebar_news" class="newsItem">
    <h3 class="catListTitle">公告</h3>
<div id="blog-news">    
    <div id="sidebar_news_content">
    </div>
</div>
<script>loadBlogNews();</script>

 
</div>
<div id="sidebar_c3"></div>
			<div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script>			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</div>			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		<!--done-->
Copyright &copy; 2024 后除
<br /><span id="poweredby">Powered by .NET 8.0 on Kubernetes</span>



	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->



    

    <input type="hidden" id="antiforgery_token" value="CfDJ8C838EyK0EpKpQQcC9VwxBnn6o1qqLWixarL_J45h8myt4TjmQInUzxACwc88XA9aIVMhJG1E191bzanK93nmBF64SetfVx2tYJYrcgaPf7Z8nxF0ulLkF1NKNVSod4Oo2IFvkAHqeG1TX3RgmMB86c" />
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-M95P3TTWJZ"></script>
<script>
    window.dataLayer = window.dataLayer || [];
    function gtag() { dataLayer.push(arguments); }
    gtag('js', new Date());
    gtag('config', 'G-M95P3TTWJZ');
</script>
<script defer src="https://hm.baidu.com/hm.js?866c9be12d4a814454792b1fd0fed295"></script>
</body>
</html>
